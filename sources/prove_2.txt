for entry in &entries_buffer {
    let pos = entry.position;
    let offset = entry.offset;
    let entry_size = plotentry_size(i, self.k);

    let mut table_i = File::open(
        self.data_path
            .join(format!(table_final_filename_format!(), i)),
    )?;

    let mut buffer = vec![0u8; entry_size];

    table_i.seek(SeekFrom::Start(pos * entry_size as u64));
    table_i.read_exact(&mut buffer);
    let left_entry: PlotEntry = bincode::deserialize(&buffer);

    table_i.seek(SeekFrom::Start((pos + offset) * entry_size as u64));
    table_i.read_exact(&mut buffer);
    let right_entry: PlotEntry = bincode::deserialize(&buffer);

    temp_buffer.push(left_entry);
    temp_buffer.push(right_entry);
}
entries_buffer.clear();
entries_buffer.append(&mut temp_buffer);
