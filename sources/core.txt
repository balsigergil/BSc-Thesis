let mut left_bucket = Vec::new();
let mut right_bucket = Vec::new();
let mut bucket = 0;
let mut pos = 0;
let mut fx = FxCalculator::new(k, 2);

for entry in table_1 {
    let y_bucket = entry.fx / PARAM_BC; // PARAM_BC = B * C = 119 * 127
    if y_bucket == bucket {
        left_bucket.push(entry);
    } else if y_bucket == bucket + 1 {
        right_bucket.push(entry);
    } else {
        if !left_bucket.is_empty() && !right_bucket.is_empty() {
            let matches = fx.find_matches(&left_bucket, &right_bucket);

            // On calcule f2 pour chaque match
            // ...
        }

        if y_bucket == bucket + 2 {
            bucket += 1;
            left_bucket = right_bucket.clone();
            right_bucket.clear();
            right_bucket.push(entry);
        } else {
            bucket = y_bucket;
            left_bucket.clear();
            left_bucket.push(entry);
            right_bucket.clear();
        }
    }
    pos += 1;
}